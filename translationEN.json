{
  "welcome": "Welcome",
  "description": "This is a multilingual app",
  "button": {
    "change_language": "Change Language",
    "save": "Save",
    "cancel": "Cancel"
  },
  "navigation": {
    "home": "Home",
    "about": "About",
    "contact": "Contact"
  },
  "dashboard": {
    "title": "Dashboard",
    "webhooks_title": "WebHooks",
    "webhooks_content": "Webhooks dashboard content here...",
    "networks_title": "Networks",
    "networks_content": "Networks dashboard content here..."
  },
  "resource_chart": {
    "all_services": "All services",
    "uptime_history": "Uptime and Downtime history",
    "week": "Week",
    "last_update": "Last update 2 minutes ago",
    "avg_uptime": "Average uptime:",
    "status": "Status:",
    "operational": "Operational",
    "database_service": "Database Service",
    "api_gateway": "API Gateway",
    "web_server": "Web Server",
    "cache_service": "Cache Service"
  },
  "infrastructure_map": {
    "title": "Infrastructure Distribution",
    "servers": "Servers",
    "networks": "Networks",
    "failures": "Failures"
  },
  "server": {
    "all_api_services": "All API services",
    "new": "New",
    "show_all": "Show All",
    "explorer": "Explorer",
    "http_methods": "HTTP Methods",
    "last_24h": "last 24h",
    "http_status_code": "HTTP status code",
    "response": "Response",
    "error": "Error",
    "terminal": {
      "service_restarted": "[INFO] Service 'nginx' restarted successfully.",
      "high_cpu": "[WARN] High CPU usage detected: 87%.",
      "elasticsearch_failed": "[ERROR] Elasticsearch connection failed: timeout reached.",
      "backup_completed": "[INFO] Backup completed in 3.24s.",
      "mysql_query": "[INFO] MySQL query executed: SELECT COUNT(*) FROM users;",
      "services_status": "services status",
      "logs_all": "logs all",
      "help": "help",
      "clear": "clear",
      "system_info": "system info",
      "available_commands": "Available commands:",
      "cmd_services_status": "- services status    Show all services status",
      "cmd_logs_all": "- logs all          Show recent logs",
      "cmd_clear": "- clear             Clear terminal",
      "cmd_system_info": "- system info       Show system information",
      "cmd_restart": "- restart <service> Restart a service"
    }
  },
  "api": {
    "all_api_services": "All API services",
    "new": "New",
    "show_all": "Show All",
    "explorer": "Explorer",
    "http_methods": "HTTP Methods",
    "last_24h": "last 24h",
    "http_status_code": "HTTP status code",
    "response": "Response",
    "error": "Error",
    "logs": {
      "filter_by": "Filter by...",
      "method": "Method",
      "endpoint": "Endpoint",
      "status": "Status",
      "timestamp": "Timestamp",
      "response_time": "Response Time",
      "clear": "Clear",
      "analyze": "Analyze",
      "no_results": "No results found"
    },
    "chart": {
      "response_errors": "RESPONSE & ERRORS"
    }
  },
  "internal": {
    "incident": "Incidents",
    "critical": "Critical",
    "incident_history": "Incident History",
    "all": "All",
    "escalar": "Escalate",
    "analyze": "Analyze",
    "sla": "NAME",
    "limit": "LIMIT (GOAL)",
    "measured": "MEASURED (ACTUAL)",
    "status": "STATUS",
    "service": "TYPE",
    "none": "-"
  },
  "status_badge": {
    "error": "Error",
    "at_risk": "At risk",
    "fulfilled": "Fulfilled"
  },
  "system_overview": {
    "title": "System Overview",
    "services_failed": "Services Failed",
    "active_alerts": "Active Alerts",
    "availability": "Availability",
    "increased": "Increased",
    "decreased": "Decreased",
    "last_24h": "in the last 24h",
    "general_status": "System General Status",
    "operational": "Operational"
  },
  "common": {
    "add": "Add",
    "remove": "Remove",
    "required": "Required",
    "optional": "Optional",
    "loading": "Loading...",
    "saving": "Saving...",
    "saved": "Saved successfully!",
    "error": "An error occurred",
    "success": "Success!",
    "confirmation": "Confirmation",
    "yes": "Yes",
    "no": "No"
  },
  "filters": {
    "all": "All",
    "active": "Active",
    "inactive": "Inactive",
    "warning": "Warning",
    "error": "Error",
    "filter_services": "Filter services",
    "no_services": "No services match the current filter"
  },
  "activities": {
    "cpu_limit_updated": "CPU usage limit updated",
    "now": "Just now",
    "auth_service_restarted": "Authentication service restarted",
    "minutes_ago": "{{count}} minutes ago",
    "bug_reported": "Bug reported in log system",
    "hours_ago": "{{count}} hours ago",
    "data_modified": "Data modified on page {{page}}",
    "today_time": "Today, {{time}}",
    "page_deleted": "Page deleted in project {{project}}",
    "date": "{{date}}",
    "backup_completed": "Automatic backup completed",
    "one_hour_ago": "1 hour ago",
    "recent_activities": "Recent Activities",
    "last_updates": "Last system updates",
    "realtime": "Realtime",
    "all": "All",
    "high": "High",
    "medium": "Medium",
    "low": "Low",
    "new_badge": "NEW",
    "recent_badge": "RECENT",
    "load_more": "Load more activities ({{count}} left)",
    "footer_count": "{{count}} activit{{count !== 1 ? 'y' : 'ies'}}",
    "see_all": "See all"
  },
  "monitor": {
    "title": "Monitoring",
    "subtitle": "Web Services Status",
    "servers": "Servers",
    "apis": "APIs",
    "networks": "Networks",
    "webhooks": "Web hooks",
    "response_time": "Response Time",
    "one_second": "One second",
    "two_seconds": "Two seconds",
    "four_seconds": "Four seconds",
    "two_point_zero_one_seconds": "Two point zero one seconds",
    "monthly_uptime": "Monthly Uptime",
    "min_9999": "At least 99.99%",
    "uptime_guaranteed": "Guaranteed availability (>99.99%)",
    "search_placeholder": "Search services...",
    "no_results": "No services found"
  },
  "service_modal": {
    "new_service": "New Service",
    "edit_service": "Edit Service",
    "select_type": "Select service type",
    "basic_info": "Basic information",
    "specific_config": "Specific configuration",
    "service_name": "Service name",
    "service_name_placeholder": "Ex: Main Server",
    "description": "Description",
    "description_placeholder": "Describe what this service monitors...",
    "type": "Type",
    "users_to_notify": "Users to Notify",
    "add_email_placeholder": "email@example.com",
    "email_help": "Add emails of users who should receive notifications about this service",
    "no_users_added": "No users added for notifications",
    "monitoring_config": "Monitoring Configuration",
    "interval_seconds": "Interval (seconds)",
    "timeout_ms": "Timeout (ms)",
    "retries": "Retries",
    "cancel": "Cancel",
    "back": "Back",
    "next": "Next",
    "create_service": "Create Service",
    "save": "Save",
    "invalid_email": "Please enter a valid email",
    "email_already_added": "This email has already been added"
  },
  "service_types": {
    "ping": {
      "name": "Servers (PING)",
      "description": "Ping monitoring to verify connectivity",
      "ip_address": "IP Address",
      "ip_placeholder": "192.168.1.1",
      "webhook_url": "Webhook URL",
      "webhook_placeholder": "https://example.com/webhook",
      "packet_size": "Packet Size (bytes)",
      "ttl": "TTL (Time To Live)"
    },
    "http": {
      "name": "HTTP APIs",
      "description": "HTTP/HTTPS endpoint monitoring",
      "endpoint": "Endpoint URL",
      "endpoint_placeholder": "https://api.example.com/health",
      "method": "HTTP Method",
      "auth_type": "Authentication Type",
      "auth_none": "None",
      "auth_bearer": "Bearer Token",
      "auth_basic": "Basic Auth",
      "token_placeholder": "Token...",
      "credentials_placeholder": "username:password",
      "custom_headers": "Custom Headers",
      "header_name": "Header name",
      "header_value": "Header value",
      "body_json": "Body (JSON)",
      "body_placeholder": "{\"key\": \"value\"}",
      "expected_status": "Expected HTTP Status",
      "max_response_time": "Maximum Response Time (ms)",
      "expected_text": "Expected Text in Body",
      "expected_text_placeholder": "success, ok, running...",
      "validate_ssl": "Validate SSL",
      "follow_redirects": "Follow Redirects"
    },
    "snmp": {
      "name": "Networks (SNMP)",
      "description": "Network device monitoring via SNMP",
      "host": "Host",
      "host_placeholder": "192.168.1.1",
      "version": "SNMP Version",
      "oid": "OID",
      "oid_placeholder": "1.3.6.1.2.1.1.1.0",
      "community": "Community String",
      "community_placeholder": "public",
      "username": "Username",
      "auth_protocol": "Authentication Protocol",
      "auth_password": "Authentication Password",
      "priv_protocol": "Privacy Protocol",
      "priv_password": "Privacy Password",
      "monitoring_mode": "Monitoring Mode",
      "mode_cron": "Cron",
      "mode_interval": "Interval",
      "timezone": "Timezone",
      "timezone_placeholder": "UTC, America/Sao_Paulo",
      "cron_expression": "Cron Expression",
      "cron_placeholder": "*/5 * * * * (every 5 minutes)",
      "delay_between_retries": "Delay between retries (ms)",
      "expected_response_time": "Expected Response Time (ms)",
      "auto_generate": "Auto-generate settings"
    },
    "webhook": {
      "name": "Webhooks",
      "description": "Webhook configuration for notifications",
      "endpoint": "Endpoint URL",
      "endpoint_placeholder": "https://webhook.example.com/notify",
      "method": "HTTP Method",
      "secret": "Secret (Secret key for signature)",
      "secret_placeholder": "Secret key for webhook validation",
      "secret_help": "Used to generate HMAC signature of payload",
      "custom_headers": "Custom Headers",
      "common_headers": "Common headers:",
      "webhook_info_title": "ðŸ“‹ Webhook Information",
      "webhook_info_1": "â€¢ Webhooks will be called when monitoring events occur",
      "webhook_info_2": "â€¢ Payload will include service and event information",
      "webhook_info_3": "â€¢ Use secret to validate request authenticity",
      "webhook_info_4": "â€¢ Custom headers can be used for additional authentication",
      "payload_example": "Example payload that will be sent:"
    }
  },
  "actions": {
    "actions": "ACTIONS",
    "edit": "Edit service",
    "delete": "Delete service",
    "confirm_delete": "Are you sure you want to delete this service?",
    "delete_error": "Error deleting service. Please try again.",
    "refresh_data": "Refresh data"
  },
  "sidebar": {
    "brand": "InfraWatch",
    "homepage": "Homepage",
    "monitoring": "Monitoring",
    "reports": "Reports",
    "servers": "Servers",
    "networks": "Networks",
    "webhooks": "Webhooks",
    "apis": "APIs",
    "history": "History",
    "users": "Users",
    "settings": "Settings",
    "dark_mode": "Dark mode",
    "logout": "Logout"
  }
}